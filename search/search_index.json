{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview The CrazyComet playing field is build out of four major parts: Turrets Tower Displays Base Plate In this section of the documentation it is explained how each of those elements is constructed.","title":"Overview"},{"location":"#overview","text":"The CrazyComet playing field is build out of four major parts: Turrets Tower Displays Base Plate In this section of the documentation it is explained how each of those elements is constructed.","title":"Overview"},{"location":"baseplate/","text":"","title":"Base Plate"},{"location":"components/","text":"Components The following tables contain a list of all components needed to build the CrazyComet Game Electronic components Component Function Quantity Infrared Light Barrier Sensor E18-D80NK Used in turret for detection of hits 6 Metal resistor 82 Ohm axially wired 0414 1 W MFR1145 Series resistor for shoot LED 6 Metal resistor 220 Ohm axially wired 0414 1 W MFR1145 Series resistor for point LED 6 GRV LED 5 GN, 5 mm, green Display of the hits 6 LED rot Display of the shoots 6 Servo motor HS-40 Economy nano servo Movement of the turrets above and below,right and left 12 DollaTek 24 Bits WS2812 5050 RGB LED Ring Show points and game status 6 Display 2.8 TFT SPI 240x320 ILI9341 Show match status and team scores 2 Stepper motor NEMA-14 SC3518S1204-B with NOE2-05-K14 (5 MM) \u2013 OPTISCHER 3-KANAL-ENCODER Tilt central tower 1 Stepper Motor NEMA- 1 Adafruit DC & Stepper Motor HAT for Raspberry Pi Control Stepper motors direction and speed 1 Game console 6 Raspberry Pi 3 Model B control 9 Mechanical components Component Function Quantity M3*16 attach turret to groundplane 36 M3 Nuts 36 M3 Washers 36 M3*8 attach right and left bearing half 36 M3*8.1 threaded insert for basemount 24","title":"Components"},{"location":"components/#components","text":"The following tables contain a list of all components needed to build the CrazyComet Game","title":"Components"},{"location":"components/#electronic-components","text":"Component Function Quantity Infrared Light Barrier Sensor E18-D80NK Used in turret for detection of hits 6 Metal resistor 82 Ohm axially wired 0414 1 W MFR1145 Series resistor for shoot LED 6 Metal resistor 220 Ohm axially wired 0414 1 W MFR1145 Series resistor for point LED 6 GRV LED 5 GN, 5 mm, green Display of the hits 6 LED rot Display of the shoots 6 Servo motor HS-40 Economy nano servo Movement of the turrets above and below,right and left 12 DollaTek 24 Bits WS2812 5050 RGB LED Ring Show points and game status 6 Display 2.8 TFT SPI 240x320 ILI9341 Show match status and team scores 2 Stepper motor NEMA-14 SC3518S1204-B with NOE2-05-K14 (5 MM) \u2013 OPTISCHER 3-KANAL-ENCODER Tilt central tower 1 Stepper Motor NEMA- 1 Adafruit DC & Stepper Motor HAT for Raspberry Pi Control Stepper motors direction and speed 1 Game console 6 Raspberry Pi 3 Model B control 9","title":"Electronic components"},{"location":"components/#mechanical-components","text":"Component Function Quantity M3*16 attach turret to groundplane 36 M3 Nuts 36 M3 Washers 36 M3*8 attach right and left bearing half 36 M3*8.1 threaded insert for basemount 24","title":"Mechanical components"},{"location":"display/","text":"Displays With the displays the points of every team as well as the winner is displayed. In adition this module provides some soundeffects using a speakter Construction Displays Connection to Raspberry Pi Display -> Pi CLK -> SLCK MOSI -> MOSI CS -> CE0 D/C -> GPIO 25 RESET -> GPIO 24 Vin -> 3.3V GND -> GND LED -> 3.3V Note Both displays are connected to the same pins so they show the same image Speaker Setup Info The documentation of the software wich is used to control displays and speaker in the game can be found here Displays In order to use the diplays in a python program on a raspberry pi SPI needs to be enabled. Next the following commands need to be executed to install the packages needed to communicate with the Displays. sudo pip3 install Adafruit-Blinka sudo pip3 install adafruit-circuitpython-rgb-display sudo apt-get install python3-pil Note After installing those packages a reboot is necessary Info Examples on how to use the displays can be found here","title":"Displays"},{"location":"display/#displays","text":"With the displays the points of every team as well as the winner is displayed. In adition this module provides some soundeffects using a speakter","title":"Displays"},{"location":"display/#construction","text":"","title":"Construction"},{"location":"display/#displays_1","text":"","title":"Displays"},{"location":"display/#connection-to-raspberry-pi","text":"Display -> Pi CLK -> SLCK MOSI -> MOSI CS -> CE0 D/C -> GPIO 25 RESET -> GPIO 24 Vin -> 3.3V GND -> GND LED -> 3.3V Note Both displays are connected to the same pins so they show the same image","title":"Connection to Raspberry Pi"},{"location":"display/#speaker","text":"","title":"Speaker"},{"location":"display/#setup","text":"Info The documentation of the software wich is used to control displays and speaker in the game can be found here","title":"Setup"},{"location":"display/#displays_2","text":"In order to use the diplays in a python program on a raspberry pi SPI needs to be enabled. Next the following commands need to be executed to install the packages needed to communicate with the Displays. sudo pip3 install Adafruit-Blinka sudo pip3 install adafruit-circuitpython-rgb-display sudo apt-get install python3-pil Note After installing those packages a reboot is necessary Info Examples on how to use the displays can be found here","title":"Displays"},{"location":"motor/","text":"Motor Control Control with adafruit motor shield on raspberry pi Instruction to set up Motorshield https://learn.adafruit.com/adafruit-dc-and-stepper-motor-hat-for-raspberry-pi Datasheet Assembled Git Repository https://github.com/adafruit/Adafruit-Motor-HAT-Python-Library.git Testcode for a DC motor from adafruit_motorkit import MotorKit kit = MotorKit () kit . motor1 . throttle = 0.1","title":"**Motor Control**"},{"location":"motor/#motor-control","text":"","title":"Motor Control"},{"location":"motor/#control-with-adafruit-motor-shield-on-raspberry-pi","text":"Instruction to set up Motorshield https://learn.adafruit.com/adafruit-dc-and-stepper-motor-hat-for-raspberry-pi Datasheet Assembled Git Repository https://github.com/adafruit/Adafruit-Motor-HAT-Python-Library.git Testcode for a DC motor from adafruit_motorkit import MotorKit kit = MotorKit () kit . motor1 . throttle = 0.1","title":"Control with adafruit motor shield on raspberry pi"},{"location":"tower/","text":"Tower The tower is the central element of the playing field. It is used to move the comets around the playing field so every player has a chance to hit them. 3D CAD model of the tower Construction The tower consists of a base and an arm with a comet at each end. The arm can be rotated horizontally and tilted vertically. Both motions are created with a stepper motor. The stepper motors are controlled with the Raspberry Pi using a Adafruit Motor Shield . Setup Info The documentation of the software wich is used to control the tower can be found here The Adafruit Motor Shield can be controlled in python using the Adafruit CircuitPython MotorKit library. Because the Adafruit Motor Shield uses I2C to communicate with the Raspberry Pi I2C needs to be enabled. Warning On the Raspberry Pi the I2C speed has to be set to ... . Components For a list of all used components see the Components section.","title":"Tower"},{"location":"tower/#tower","text":"The tower is the central element of the playing field. It is used to move the comets around the playing field so every player has a chance to hit them. 3D CAD model of the tower","title":"Tower"},{"location":"tower/#construction","text":"The tower consists of a base and an arm with a comet at each end. The arm can be rotated horizontally and tilted vertically. Both motions are created with a stepper motor. The stepper motors are controlled with the Raspberry Pi using a Adafruit Motor Shield .","title":"Construction"},{"location":"tower/#setup","text":"Info The documentation of the software wich is used to control the tower can be found here The Adafruit Motor Shield can be controlled in python using the Adafruit CircuitPython MotorKit library. Because the Adafruit Motor Shield uses I2C to communicate with the Raspberry Pi I2C needs to be enabled. Warning On the Raspberry Pi the I2C speed has to be set to ... .","title":"Setup"},{"location":"tower/#components","text":"For a list of all used components see the Components section.","title":"Components"},{"location":"turrets/","text":"Turrets The turrets are controlled by the player. They are used to \"shoot\" the \"comets\". In the current setup six turrets are used. 3D CAD model of a turret Construction Turret The model used for the turrets is based on a model found on Thingiverse 1 . Two servos are used two create horizontal and vertical motion. One is placed below the base of the turret. The other is placed on the right side of the top element. In order to detect if the player hit the comet a IR-Sensor is used. The model which is used returns a binary signal. The sensitivity can be tuned with a screw on the back of the sensor. In adition two led's are used to display if the player shot ( white ) and if he hit ( green ). Both led's are positioned at the tip of the barrel of the turret. LED Circle Below the each turret a led circle displays if a player is ready. While the game the circle displays the ... of the player. The led circle is controlled over a Raspberry Pi using SPI Components For a list of all used components see the Components section. modelname by creator source: https://www.https://www.thingiverse.com/something \u21a9","title":"Turrets"},{"location":"turrets/#turrets","text":"The turrets are controlled by the player. They are used to \"shoot\" the \"comets\". In the current setup six turrets are used. 3D CAD model of a turret","title":"Turrets"},{"location":"turrets/#construction","text":"","title":"Construction"},{"location":"turrets/#turret","text":"The model used for the turrets is based on a model found on Thingiverse 1 . Two servos are used two create horizontal and vertical motion. One is placed below the base of the turret. The other is placed on the right side of the top element. In order to detect if the player hit the comet a IR-Sensor is used. The model which is used returns a binary signal. The sensitivity can be tuned with a screw on the back of the sensor. In adition two led's are used to display if the player shot ( white ) and if he hit ( green ). Both led's are positioned at the tip of the barrel of the turret.","title":"Turret"},{"location":"turrets/#led-circle","text":"Below the each turret a led circle displays if a player is ready. While the game the circle displays the ... of the player. The led circle is controlled over a Raspberry Pi using SPI","title":"LED Circle"},{"location":"turrets/#components","text":"For a list of all used components see the Components section. modelname by creator source: https://www.https://www.thingiverse.com/something \u21a9","title":"Components"}]}